(function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("d3-scale"),require("d3-shape")):"function"==typeof define&&define.amd?define(["exports","d3-scale","d3-shape"],t):(e=e||self,t(e.fc=e.fc||{},e.d3,e.d3))})(this,function(e,t,a){'use strict';var o=Math.abs;function r(e){switch(e){case q.BYTE:case q.UNSIGNED_BYTE:return 1;case q.SHORT:case q.UNSIGNED_SHORT:return 2;case q.FLOAT:return 4;default:throw new Error("Unknown type ".concat(e));}}function i(e){switch(e){case q.BYTE:return Int8Array;case q.UNSIGNED_BYTE:return Uint8Array;case q.SHORT:return Int16Array;case q.UNSIGNED_SHORT:return Uint16Array;case q.FLOAT:return Float32Array;default:throw new Error("Unknown type ".concat(e));}}t=t&&t.hasOwnProperty("default")?t["default"]:t,a=a&&a.hasOwnProperty("default")?a["default"]:a;var n=function(){var e=[0,1],t=[-1,1],a=function(){};return a.domain=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],a):e},a.range=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],a):t},a},l=function(){var e={},t={},a=null,r=function(r,i){var o=r.context();Object.keys(e).forEach(function(t){var a=e[t];if("function"!=typeof a)throw new Error("Expected an attribute for ".concat(t,", found ").concat(a));var n=o.getAttribLocation(i,t);a.location(n)(r)}),Object.keys(t).forEach(function(e){var a=t[e];if("function"!=typeof a)throw new Error("Expected a uniform for ".concat(e,", found ").concat(a));var n=o.getUniformLocation(i,e);a.location(n)(r)}),null!==a&&a(r)};return r.attribute=function(){for(var t=arguments.length,a=Array(t),i=0;i<t;i++)a[i]=arguments[i];return 1===a.length?e[a[0]]:(e[a[0]]=a[1],r)},r.uniform=function(){for(var e=arguments.length,a=Array(e),i=0;i<e;i++)a[i]=arguments[i];return 1===a.length?t[a[0]]:(t[a[0]]=a[1],r)},r.elementIndices=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],r):a},r},d=function(e){var t=-1,a=e,r=!0,i=function(e){if(r){var i=e.context();if(Array.isArray(a))switch(a.length){case 1:i.uniform1fv(t,a);break;case 2:i.uniform2fv(t,a);break;case 3:i.uniform3fv(t,a);break;case 4:i.uniform4fv(t,a);break;default:throw new Error("Uniform supports up to 4 elements. ".concat(a.length," provided."));}else i.uniform1f(t,a);r=!1}};return i.location=function(){return arguments.length?(t!==(0>=arguments.length?void 0:arguments[0])&&(t=0>=arguments.length?void 0:arguments[0],r=!0),i):t},i.data=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],r=!0,i):a},i},u={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},f=function(){function e(e,t,a){if(!e)return!0;var i=r.getAttachedShaders(e),o=r.getShaderSource(i[0]),n=r.getShaderSource(i[1]);return t!==o||a!==n}function t(e,t){var i=a(e,r.VERTEX_SHADER),o=a(t,r.FRAGMENT_SHADER),n=r.createProgram();if(r.attachShader(n,i),r.attachShader(n,o),r.linkProgram(n),!r.getProgramParameter(n,r.LINK_STATUS)){var l=r.getProgramInfoLog(n);throw r.deleteProgram(n),new Error("Failed to link program : ".concat(l,"\n            Vertex Shader : ").concat(e,"\n            Fragment Shader : ").concat(t))}return n}function a(e,t){var a=r.createShader(t);if(r.shaderSource(a,e),r.compileShader(a),!r.getShaderParameter(a,r.COMPILE_STATUS)){var i=r.getShaderInfoLog(a);throw r.deleteShader(a),new Error("Failed to compile shader : ".concat(i,"\n            Shader : ").concat(e))}return a}var r=null,i=null,o=null,n=null,f=u.TRIANGLES,s=l(),c=function a(l){var c=o(),b=n();e(i,c,b)&&(r.isProgram(i)&&r.deleteProgram(i),i=t(c,b)),r.useProgram(i),s.uniform("uScreen",d([r.canvas.width,r.canvas.height])),s(a,i);var g=r.getExtension("ANGLE_instanced_arrays");if(f!==u.POINTS&&f!==u.TRIANGLES)throw Error("Expected mode TRIANGLES (".concat(u.TRIANGLES,") or POINTS (").concat(u.POINTS,"). ").concat(f," received instead."));if(null==s.elementIndices())throw Error("Element indices must be provided.");g.drawElementsInstancedANGLE(f,s.elementIndices().data().length,r.UNSIGNED_SHORT,0,l)};return c.context=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],c):r},c.buffers=function(){return arguments.length?(s=0>=arguments.length?void 0:arguments[0],c):s},c.vertexShader=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],c):o},c.fragmentShader=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],c):n},c.mode=function(){return arguments.length?(f=0>=arguments.length?void 0:arguments[0],c):f},c},s=function(e){function t(e,t){e.push(t)}function a(e,t,a){var r=e.indexOf(a);e.splice(0<=r?r:e.length,0,t)}function r(e,t){var a=e.indexOf(t);-1===a&&e.push(t)}var i=[],o=[],n=function(){return e(i.join("\n"),o.join("\n"))};return n.appendHeader=function(e){return t(i,e),n},n.insertHeader=function(e,t){return a(i,e,t),n},n.appendHeaderIfNotExists=function(e){return r(i,e),n},n.appendBody=function(e){return t(o,e),n},n.insertBody=function(e,t){return a(o,e,t),n},n.appendBodyIfNotExists=function(e){return r(o,e),n},n},c=function(e,t){return"\nprecision mediump float;\nfloat inf = 1.0 / 0.0;\n".concat(e,"\nvoid main() {\n    ").concat(t,"\n}")},b=function(e,t){return"\nprecision mediump float;\n".concat(e,"\nvoid main() {\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    ").concat(t,"\n}")},g={header:"attribute vec4 aFillColor;\n             varying vec4 vFillColor;",body:"vFillColor = aFillColor;"},v={header:"attribute vec4 aStrokeColor;\n             varying vec4 vStrokeColor;",body:"vStrokeColor = aStrokeColor;"},h={header:"\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vSize = 2.0 * sqrt(aSize / 3.14159);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);"},p={header:"\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vSize = sqrt(aSize);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);"},y={header:"\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vSize = sqrt((16.0 * aSize) / (3.0 * sqrt(3.0)));\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);"},x={header:"\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aSize;\n        attribute float aDefined;\n\n        uniform float uStrokeWidth;\n\n        varying float vSize;\n        varying float vStrokeWidthRatio;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vSize = 3.0 * sqrt(aSize / 5.0);\n        vStrokeWidthRatio = uStrokeWidth / (vSize + uStrokeWidth + 1.0);\n        gl_PointSize = vSize + uStrokeWidth + 1.0;\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);"},m={header:"\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aOpenValue;\n        attribute float aCloseValue;\n        attribute float aLowValue;\n        attribute vec3 aCorner;\n        attribute float aDefined;\n    \n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n        \n        varying float vColorIndicator;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vColorIndicator = sign(aCloseValue - aOpenValue);\n\n        float isPositiveY = (sign(aCorner.y) + 1.0) / 2.0;\n        float isNotPositiveY = 1.0 - isPositiveY;\n        float isExtremeY = abs(aCorner.y) - 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n        float yValue =\n         (isPositiveY * isExtremeY * aLowValue) + \n         (isPositiveY * isNotExtremeY * aCloseValue) +\n         (isNotPositiveY * isNotExtremeY * aOpenValue) +\n         (isNotPositiveY * isExtremeY * aHighValue);\n\n        float lineWidthXDirection = (isNotExtremeY * aCorner.x) + (isExtremeY * aCorner.z);\n        float lineWidthYDirection = isNotExtremeY * sign(aCloseValue - aOpenValue) * aCorner.y;\n\n        float bandwidthModifier = aBandwidth * aCorner.x / 2.0;\n\n        float xModifier = (uStrokeWidth * lineWidthXDirection / 2.0) + bandwidthModifier;\n        float yModifier = uStrokeWidth * lineWidthYDirection / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);"},S={header:"\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aOpenValue;\n        attribute float aCloseValue;\n        attribute float aLowValue;\n        attribute vec3 aCorner;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n\n        varying float vColorIndicator;\n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        vColorIndicator = sign(aCloseValue - aOpenValue);\n\n        float isPositiveY = (sign(aCorner.y) + 1.0) / 2.0;\n        float isNotPositiveY = 1.0 - isPositiveY;\n        float isExtremeY = abs(aCorner.y) - 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n        float yValue = \n            (isPositiveY * isExtremeY * aLowValue) + \n            (isPositiveY * isNotExtremeY * aCloseValue) +\n            (isNotPositiveY * isNotExtremeY * aOpenValue) +\n            (isNotPositiveY * isExtremeY * aHighValue);\n\n        float lineWidthXDirection = isExtremeY * aCorner.z;\n        float lineWidthYDirection = isNotExtremeY * aCorner.z;\n\n        float bandwidthModifier = isNotExtremeY * aCorner.x * aBandwidth / 2.0;\n\n        float xModifier = (uStrokeWidth * lineWidthXDirection / 2.0) + bandwidthModifier;\n        float yModifier = uStrokeWidth * lineWidthYDirection / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);"},V={header:"\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aMainValue;\n        attribute float aBaseValue;\n        attribute vec2 aCorner;\n        attribute float aDefined;\n        \n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n        \n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        float isBaseline = (1.0 - aCorner.y) / 2.0;\n        float yValue = (isBaseline * aBaseValue) + ((1.0 - isBaseline) * aMainValue);\n\n        float xModifier = aCorner.x * (aBandwidth) / 2.0;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);"},C={header:"\n        attribute vec3 aCorner;\n        attribute float aCrossNextValue;\n        attribute float aMainNextValue;\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aCrossPrevValue;\n        attribute float aMainPrevValue;\n        attribute float aCrossPrevPrevValue;\n        attribute float aMainPrevPrevValue;\n        attribute float aDefined;\n        attribute float aDefinedNext;\n        \n        uniform float uStrokeWidth;\n        uniform vec2 uScreen;\n\n        varying float vDefined;",body:"\n        vDefined = aDefined * aDefinedNext;\n        vec4 next = vec4(aCrossNextValue, aMainNextValue, 0, 0);\n        gl_Position = vec4(aCrossValue, aMainValue, 0, 1);\n        vec4 prev = vec4(aCrossPrevValue, aMainPrevValue, 0, 0);\n        vec4 prevPrev = vec4(aCrossPrevPrevValue, aMainPrevPrevValue, 0, 0);"},P={body:"\n        vec4 prevVertexPosition = gl_Position;\n        vec4 currVertexPosition = gl_Position;\n        \n        if (all(equal(prev.xy, prevPrev.xy))) {\n            prevPrev.xy = prev.xy + normalize(prev.xy - prevVertexPosition.xy);\n        }\n        if (all(equal(prev.xy, prevVertexPosition.xy))) {\n            prevVertexPosition.xy = prev.xy + normalize(prev.xy - prevPrev.xy);\n        }\n        vec2 A = normalize(normalize(prev.xy - prevPrev.xy) * uScreen);\n        vec2 B = normalize(normalize(prevVertexPosition.xy - prev.xy) * uScreen);\n        vec2 tangent = normalize(A + B);\n        vec2 miter = vec2(-tangent.y, tangent.x);\n        vec2 normalA = vec2(-A.y, A.x);\n        float miterLength = 1.0 / dot(miter, normalA);\n        vec2 point = normalize(A - B);\n        if (miterLength > 10.0 && sign(aCorner.x * dot(miter, point)) > 0.0) {\n            prevVertexPosition.xy = prev.xy - (aCorner.x * aCorner.y * uStrokeWidth * normalA) / uScreen.xy;\n        } else {\n            prevVertexPosition.xy = prev.xy + (aCorner.x * miter * uStrokeWidth * miterLength) / uScreen.xy;\n        }\n\n        if (all(equal(currVertexPosition.xy, prev.xy))) {\n            prev.xy = currVertexPosition.xy + normalize(currVertexPosition.xy - next.xy);\n        }\n        if (all(equal(currVertexPosition.xy, next.xy))) {\n            next.xy = currVertexPosition.xy + normalize(currVertexPosition.xy - prev.xy);\n        }\n        vec2 C = normalize(normalize(currVertexPosition.xy - prev.xy) * uScreen);\n        vec2 D = normalize(normalize(next.xy - currVertexPosition.xy) * uScreen);\n        vec2 tangentCD = normalize(C + D);\n        vec2 miterCD = vec2(-tangentCD.y, tangentCD.x);\n        vec2 normalC = vec2(-C.y, C.x);\n        float miterCDLength = 1.0 / dot(miterCD, normalC);\n        vec2 pointCD = normalize(C - D);\n        if (miterCDLength > 10.0 && sign(aCorner.x * dot(miterCD, pointCD)) > 0.0) {\n            currVertexPosition.xy = currVertexPosition.xy - (aCorner.x * aCorner.y * uStrokeWidth * normalC) / uScreen.xy;\n        } else {\n            currVertexPosition.xy = currVertexPosition.xy + (aCorner.x * miterCD * uStrokeWidth * miterCDLength) / uScreen.xy;\n        }\n        \n        gl_Position.xy = ((1.0 - aCorner.z) * prevVertexPosition.xy) + (aCorner.z * currVertexPosition.xy);"},E={header:"\n        attribute vec3 aCorner;\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aHighValue;\n        attribute float aLowValue;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n        \n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        float isLow = (aCorner.y + 1.0) / 2.0;\n        float yValue = isLow * aLowValue + (1.0 - isLow) * aHighValue;\n\n        float isEdgeCorner = abs(aCorner.x);\n        float lineWidthXDirection = (1.0 - isEdgeCorner) * aCorner.z;\n        float lineWidthYDirection = isEdgeCorner * aCorner.z;\n        \n        gl_Position = vec4(aCrossValue, yValue, 0, 1);\n        \n        float xModifier = (uStrokeWidth * lineWidthXDirection) + (aBandwidth * aCorner.x / 2.0);\n        float yModifier = (uStrokeWidth * lineWidthYDirection);"},A={header:"\n        attribute vec3 aCorner;\n        attribute float aCrossValue;\n        attribute float aMainValue;\n        attribute float aCrossPrevValue;\n        attribute float aMainPrevValue;\n        attribute float aBaseValue;\n        attribute float aBasePrevValue;\n        attribute float aDefined;\n        attribute float aDefinedNext;\n\n        varying float vDefined;\n        \n        float when_lt(float a, float b) {\n            return max(sign(b - a), 0.0);\n        }\n        \n        float and(float a, float b) {\n            return a * b;\n        }",body:"\n        vDefined = aDefined * aDefinedNext;\n        gl_Position = vec4(0, 0, 0, 1);\n\n        float hasIntercepted = when_lt((aMainValue - aBaseValue) * (aMainPrevValue - aBasePrevValue), 0.0);\n        float useIntercept = and(aCorner.z, hasIntercepted);\n        \n        float yGradient = (aMainValue - aMainPrevValue) / (aCrossValue - aCrossPrevValue);\n        float yConstant = aMainValue - (yGradient * aCrossValue);\n\n        float y0Gradient = (aBaseValue - aBasePrevValue) / (aCrossValue - aCrossPrevValue);\n        float y0Constant = aBaseValue - (y0Gradient * aCrossValue);\n\n        float denominator = (yGradient - y0Gradient) + step(abs(yGradient - y0Gradient), 0.0);\n        float interceptXValue = (y0Constant - yConstant) / denominator;\n        float interceptYValue = (yGradient * interceptXValue) + yConstant;\n\n        gl_Position = vec4(interceptXValue * useIntercept, interceptYValue * useIntercept, 0, 1);\n        \n        gl_Position.x += (1.0 - useIntercept) * ((aCorner.x * aCrossValue) + ((1.0 - aCorner.x) * aCrossPrevValue));\n        gl_Position.y += (1.0 - useIntercept) * (1.0 - aCorner.y) * ((aCorner.x * aMainValue) + ((1.0 - aCorner.x) * aMainPrevValue));\n        gl_Position.y += (1.0 - useIntercept) * aCorner.y * ((aCorner.x * aBaseValue) + ((1.0 - aCorner.x) * aBasePrevValue));"},D={header:"\n        attribute vec4 aCorner;\n        attribute float aCrossValue;\n        attribute float aBandwidth;\n        attribute float aCapWidth;\n        attribute float aHighValue;\n        attribute float aUpperQuartileValue;\n        attribute float aMedianValue;\n        attribute float aLowerQuartileValue;\n        attribute float aLowValue;\n        attribute float aDefined;\n\n        uniform vec2 uScreen;\n        uniform float uStrokeWidth;\n        \n        varying float vDefined;",body:"\n        vDefined = aDefined;\n        float isExtremeY = sign(abs(aCorner.y) - 2.0) + 1.0;\n        float isNotExtremeY = 1.0 - isExtremeY;\n\n        float isNonZeroY = abs(sign(aCorner.y));\n        float isZeroY = 1.0 - isNonZeroY;\n\n        float isQuartileY = isNotExtremeY * isNonZeroY;\n\n        float isPositiveY = (sign(aCorner.y + 0.5) + 1.0) / 2.0;\n        float isNegativeY = 1.0 - isPositiveY;\n\n        float yValue =\n          (isExtremeY * isNegativeY) * aHighValue +\n          (isQuartileY * isNegativeY) * aUpperQuartileValue +\n          isZeroY * aMedianValue +\n          (isQuartileY * isPositiveY) * aLowerQuartileValue +\n          (isExtremeY * isPositiveY) * aLowValue;\n\n        gl_Position = vec4(aCrossValue, yValue, 0, 1);\n\n        float isHorizontal = aCorner.w;\n        float isVertical = 1.0 - isHorizontal;\n\n        float xDisplacement = aCorner.x * (isExtremeY * aCapWidth + isNotExtremeY * aBandwidth) / 2.0;\n        \n        float xModifier = (isVertical * uStrokeWidth * aCorner.z / 2.0) + xDisplacement;\n        float yModifier = isHorizontal * uStrokeWidth * aCorner.z / 2.0;"},B={header:"\n        varying float vSize;\n        varying float vDefined;",body:"\n        float distance = length(2.0 * gl_PointCoord - 1.0);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n            return;\n        }"},N={header:"\n        varying float vSize;\n        varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float distance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));"},_={header:"\n        varying float vSize;\n        varying float vDefined;",body:"\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float topEdgesDistance = abs(pointCoordTransform.x) - ((pointCoordTransform.y - 0.6) / sqrt(3.0));\n        float bottomEdgeDistance = pointCoordTransform.y + 0.5;\n        float distance = max(topEdgesDistance, bottomEdgeDistance);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n        }"},I={header:"\n        varying float vSize;\n        varying float vStrokeWidthRatio;\n        varying float vDefined;",body:"\n        vec2 pointCoordTransform = 2.0 * gl_PointCoord - 1.0;\n        float innerCornerDistance = min(abs(pointCoordTransform.x), abs(pointCoordTransform.y)) + 0.66 - vStrokeWidthRatio;\n        float outerEdgeDistance = max(abs(pointCoordTransform.x), abs(pointCoordTransform.y));\n        float distance = max(innerCornerDistance, outerEdgeDistance);\n        if (distance > 1.0 || vDefined < 0.5) {\n            discard;\n        }"},z={header:"\n        varying float vColorIndicator;\n        varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.4, 0.8, 0, 1);\n        if (vColorIndicator < 0.0) {\n            gl_FragColor = vec4(0.8, 0.4, 0, 1);\n        }"},Y={header:"\n        varying float vColorIndicator;\n        varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.4, 0.8, 0, 1);\n        if (vColorIndicator < 0.0) {\n            gl_FragColor = vec4(0.8, 0.4, 0, 1);\n        }"},w={header:"\n        varying float vDefined;",body:"if (vDefined < 0.5) {\n            discard;\n        }\n        gl_FragColor = vec4(0.86, 0.86, 0.86, 1);"},T={header:"varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }"},M={header:"varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }"},R={header:"varying float vDefined;",body:"\n        if (vDefined < 0.5) {\n            discard;\n        }"},L={header:"varying vec4 vFillColor;",body:"gl_FragColor = vFillColor;"},H={header:"varying vec4 vStrokeColor;",body:"gl_FragColor = vStrokeColor;"},W={header:"varying float vDefined;",body:"if (vDefined < 0.5) {\n        discard;\n    }"},k=function(){var e=s(c),t=s(b);return e.appendHeader(A.header).appendBody(A.body),t.appendHeader(w.header).appendBody(w.body),{vertex:function(){return e},fragment:function(){return t}}},F=(e,t,a)=>{const r=t[a];if("function"!=typeof r)throw new Error(`Attempt to rebind ${a} which isn't a function on the source object`);return(...a)=>{var i=r.apply(t,a);return i===t?e:i}},O=(e,t,...a)=>{for(const r of a)e[r]=F(e,t,r);return e};const G=e=>t=>e.reduce((e,t)=>e&&t(e),t);var U=(e,t,...a)=>{const r=G(a);for(const i of Object.keys(t)){const a=r(i);a&&(e[a]=F(e,t,i))}return e},q={BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,FLOAT:5126},Q=function(){var e=-1,t=null,a=1,r=q.FLOAT,i=!1,o=0,n=0,l=0,d=function(d){var u=d.context();null!=t&&u.isBuffer(t)||(t=u.createBuffer()),u.bindBuffer(u.ARRAY_BUFFER,t),u.vertexAttribPointer(e,a,r,i,o,n),u.enableVertexAttribArray(e);var f=u.getExtension("ANGLE_instanced_arrays");f.vertexAttribDivisorANGLE(e,l)};return d.location=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],d):e},d.buffer=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],d):t},d.size=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],d):a},d.type=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],d):r},d.normalized=function(){return arguments.length?(i=0>=arguments.length?void 0:arguments[0],d):i},d.stride=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],d):o},d.offset=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],d):n},d.divisor=function(){return arguments.length?(l=0>=arguments.length?void 0:arguments[0],d):l},d},X=function(){var e=q.FLOAT,t=new Float32Array(0),a=function(a){var r=i(e);return t.length>a?t=new r(t.buffer,0,a):t.length!==a&&(t=new r(a)),t};return a.type=function(){if(!arguments.length)return e;if(e!==(0>=arguments.length?void 0:arguments[0])){e=0>=arguments.length?void 0:arguments[0];var r=i(e);t=new r(0)}return a},a},Z=function(){var e=!0,t=1,a=q.FLOAT,r=X(),o=function(e){return e},n=null,l=function(){var l=n.length,d=r.type(a)(l*t);if(1<t)for(var u,f=0;f<l;f++){if(u=o(n[f],f),u.length!==t)throw new Error("Expected components array of size ".concat(t,", recieved array with length ").concat(u.length,"."));for(var s=0;s<t;s++)d[f*t+s]=u[s]}else for(var c,b=0;b<l;b++){if(c=o(n[b],b),Array.isArray(c))throw new Error("Expected a single component value, recieved array with length ".concat(c.length,"."));d[b]=c}return e=!1,d};return l.dirty=function(){return e},l.size=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],e=!0,l):t},l.type=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],e=!0,l):a},l.arrayViewFactory=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],e=!0,l):r},l.value=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],e=!0,l):o},l.data=function(){return arguments.length?(n=0>=arguments.length?void 0:arguments[0],e=!0,l):n},l},j=function(){var e=Q(),t=Z(),a=function a(r){if(e.size(a.size()).type(a.type()),e(r),!!t.dirty()){var i=t(),o=r.context();o.bindBuffer(o.ARRAY_BUFFER,e.buffer()),o.bufferData(o.ARRAY_BUFFER,i,o.DYNAMIC_DRAW)}};return O(a,e,"normalized","location"),O(a,t,"data","value","size","type"),a},K=function(e){var t=null,a=e,r=!0,i=function(e){var i=e.context();null!=t&&i.isBuffer(t)||(t=i.createBuffer()),i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t),r&&(i.bufferData(i.ELEMENT_ARRAY_BUFFER,new Uint16Array(a),i.STATIC_DRAW),r=!1)};return i.data=function(){return arguments.length?(r=!0,a=0>=arguments.length?void 0:arguments[0],i):a},i},J=function(e,t,a,r){for(var i=arguments.length,o=Array(4<i?i-4:0),n=4;n<i;n++)o[n-4]=arguments[n];e[t]=function(){for(var t=arguments.length,i=Array(t),n=0;n<t;n++)i[n]=arguments[n];var l=a[r].apply(a,o.concat(i));return l===a?e:l}},$=function(){var e=s(c),t=s(b);return e.appendHeader(h.header).appendBody(h.body),t.appendHeader(B.header).appendBody(B.body),{vertex:function(){return e},fragment:function(){return t}}},ee=function(){var e=s(c),t=s(b);return e.appendHeader(C.header).appendBody(C.body),t.appendHeader(W.header).appendBody(W.body),{vertex:function(){return e},fragment:function(){return t}}},te=function(){var e=1,t=function(t){t.buffers().uniform("uStrokeWidth",d(e))};return t.lineWidth=function(){return arguments.length?(e=0>=arguments.length?void 0:arguments[0],t):e},t},ae=function(){var e=s(c),t=s(b);return e.appendHeader(S.header).appendBody(S.body),t.appendHeader(Y.header).appendBody(Y.body),{vertex:function(){return e},fragment:function(){return t}}},re=function(){var e=s(c),t=s(b);return e.appendHeader(V.header).appendBody(V.body),t.appendHeader(R.header).appendBody(R.body),{vertex:function(){return e},fragment:function(){return t}}},ie=function(){var e=s(c),t=s(b);return e.appendHeader(E.header).appendBody(E.body),t.appendHeader(M.header).appendBody(M.body),{vertex:function(){return e},fragment:function(){return t}}},oe=function(){var e=s(c),t=s(b);return e.appendHeader(m.header).appendBody(m.body),t.appendHeader(z.header).appendBody(z.body),{vertex:function(){return e},fragment:function(){return t}}},ne=function(){var e=s(c),t=s(b);return e.appendHeader(D.header).appendBody(D.body),t.appendHeader(T.header).appendBody(T.body),{vertex:function(){return e},fragment:function(){return t}}},le=function(){var e=Q().divisor(1),t=Z(),a=function a(r){if(e.size(a.size()).type(a.type()),e(r),!!t.dirty()){var i=t(),o=r.context();o.bindBuffer(o.ARRAY_BUFFER,e.buffer()),o.bufferData(o.ARRAY_BUFFER,i,o.DYNAMIC_DRAW)}};return O(a,e,"normalized","location"),O(a,t,"data","value","size","type"),a},de=function(){var e=n(),t=function(e){return"linear".concat(e)},a=function a(r,i,o){r.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(t(o),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(t(o),"Scale;")).appendBody("".concat(i," = ").concat(i," + ").concat(t(o),"Offset;")).appendBody("".concat(i," = ").concat(i," * ").concat(t(o),"Scale;"));var n=e.domain()[1]-e.domain()[0],l=e.range()[1]-e.range()[0],u=e.range()[0]*(n/l)-e.domain()[0],f=[0,0,0,0],a=[1,1,1,1];f[o]=u,a[o]=l/n,r.buffers().uniform("".concat(t(o),"Offset"),d(f)).uniform("".concat(t(o),"Scale"),d(a))};return U(a,e),a},ue=function(){function e(e,t){var a=Math.log10;return a(e)/a(t)}var t=n(),a=10,r=function(e){return"log".concat(e)},i=function i(o,n,l){var u="".concat(r(l),"Offset + (").concat(r(l),"Scale * clamp(log(").concat(n,") / log(").concat(r(l),"Base), -inf, inf))");o.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Scale;")).appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Include;")).appendHeaderIfNotExists("uniform float ".concat(r(l),"Base;")).appendBody("".concat(n," = (").concat(r(l),"Include * (").concat(u,")) + ((1.0 - ").concat(r(l),"Include) * ").concat(n,");"));var f=e(t.domain()[1],a)-e(t.domain()[0],a),s=t.range()[1]-t.range()[0],c=s/f,b=t.range()[0]-c*e(t.domain()[0],a),g=[0,0,0,0],i=[0,0,0,0],v=[0,0,0,0];g[l]=b,i[l]=c,v[l]=1,o.buffers().uniform("".concat(r(l),"Offset"),d(g)).uniform("".concat(r(l),"Scale"),d(i)).uniform("".concat(r(l),"Include"),d(v)).uniform("".concat(r(l),"Base"),d(a))};return i.base=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],i):a},U(i,t),i},fe=function(){function e(t,a){var e=Math.pow,r=Math.sign;return r(t)*e(o(t),a)}var t=n(),a=1,r=function(e){return"pow".concat(e)},i=function i(o,n,l){var u="".concat(r(l),"Offset + (").concat(r(l),"Scale * sign(").concat(n,") * pow(abs(").concat(n,"), vec4(").concat(r(l),"Exp)))");o.vertexShader().appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Offset;")).appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Scale;")).appendHeaderIfNotExists("uniform vec4 ".concat(r(l),"Include;")).appendHeaderIfNotExists("uniform float ".concat(r(l),"Exp;")).appendBody("".concat(n," = (").concat(r(l),"Include * (").concat(u,")) + ((1.0 - ").concat(r(l),"Include) * ").concat(n,");"));var f=e(t.domain()[1],a)-e(t.domain()[0],a),s=t.range()[1]-t.range()[0],c=s/f,b=t.range()[0]-c*e(t.domain()[0],a),g=[0,0,0,0],i=[0,0,0,0],v=[0,0,0,0];g[l]=b,i[l]=c,v[l]=1,o.buffers().uniform("".concat(r(l),"Offset"),d(g)).uniform("".concat(r(l),"Scale"),d(i)).uniform("".concat(r(l),"Include"),d(v)).uniform("".concat(r(l),"Exp"),d(a))};return i.exponent=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],i):a},U(i,t),i},se=function(e){var a=t.scaleIdentity(),r=null,i=e.copy.toString();return i===t.scaleLinear().copy.toString()?r=de().domain(e.domain()):i===t.scaleLog().copy.toString()?r=ue().domain(e.domain()).base(e.base()):i===t.scalePow().copy.toString()?r=fe().domain(e.domain()).exponent(e.exponent()):i===t.scaleTime().copy.toString()?r=de().domain(e.domain()):(r=de().domain(e.range()),a=e),{scale:a,glScale:r}},ce=function(){var e=s(c),t=s(b);return e.appendHeader(p.header).appendBody(p.body),t.appendHeader(N.header).appendBody(N.body),{vertex:function(){return e},fragment:function(){return t}}},be=function(){var e=s(c),t=s(b);return e.appendHeader(y.header).appendBody(y.body),t.appendHeader(_.header).appendBody(_.body),{vertex:function(){return e},fragment:function(){return t}}},ge=function(){var e=s(c),t=s(b);return e.appendHeader(x.header).appendBody(x.body),t.appendHeader(I.header).appendBody(I.body),{vertex:function(){return e},fragment:function(){return t}}},ve=function(e){switch(e){case a.symbolCircle:return $();case a.symbolSquare:return ce();case a.symbolTriangle:return be();case a.symbolCross:return ge();default:throw new Error("Unrecognised symbol: ".concat(e));}},he=function(e){var t=Q().divisor(1),a=e,r=function(e){if(t(e),!Array.isArray(a))throw new Error("Expected an array, received: ".concat(a));if(a.length!==t.size())throw new Error("Expected array of length: ".concat(t.size(),", recieved array of length: ").concat(a.length));var r=e.context();r["vertexAttrib".concat(a.length,"fv")](t.location(),a),r.disableVertexAttribArray(t.location())};return r.value=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],r):a},O(r,t,"normalized","size","location"),r};e.webglAdjacentElementAttribute=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;if(0<e||0>t)throw new Error("Offset values (".concat(e," & ").concat(t,") must straddle 0 "));var a=Q().divisor(1),i=Z(),n=function n(l){var d=n.size()*r(n.type()),u=o(e)*d;if(a.offset(u).size(n.size()).type(n.type()),a(l),!!i.dirty()){var f=i(),s=u+f.length*r(n.type())+t*d,c=l.context();c.bindBuffer(c.ARRAY_BUFFER,a.buffer()),c.bufferData(c.ARRAY_BUFFER,s,c.DYNAMIC_DRAW),c.bufferSubData(c.ARRAY_BUFFER,u,f)}};return n.offset=function(i){if(e>i||i>t)throw new Error("Requested offset ".concat(i," exceeds bounds (").concat(e," & ").concat(t,") "));var o=function(t){a.offset((i-e)*n.size()*r(n.type())),a(t)};return O(o,a,"location"),o},O(n,a,"normalized","location"),O(n,i,"data","value","size","type"),n},e.webglBaseAttribute=Q,e.webglBufferBuilder=l,e.webglElementAttribute=le,e.webglElementIndices=K,e.webglFillColor=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[0,0,0,1],t=le().size(4),a=e,r=!0,i=function(e){if(e.vertexShader().appendHeaderIfNotExists(g.header).appendBodyIfNotExists(g.body),e.fragmentShader().appendHeaderIfNotExists(L.header).appendBodyIfNotExists(L.body),!!r){if(Array.isArray(a))e.buffers().attribute("aFillColor",he(a).size(4));else if("function"==typeof a)t.value(a),e.buffers().attribute("aFillColor",t);else throw new Error("Expected value to be an array or function, received ".concat(a));r=!1}};return i.value=function(){return arguments.length?(a!==(0>=arguments.length?void 0:arguments[0])&&(a=0>=arguments.length?void 0:arguments[0],r=!0),i):a},O(i,t,"data"),i},e.webglProgramBuilder=f,e.webglScaleLinear=de,e.webglScaleLog=ue,e.webglScaleMapper=se,e.webglScalePow=fe,e.webglSeriesArea=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=function(){},i=j().size(3).type(q.UNSIGNED_BYTE).data([[0,0,0],[0,1,0],[1,1,1],[0,0,1],[1,0,0],[1,1,0]]);e.buffers().elementIndices(K([0,1,2,3,4,5])).attribute("aCorner",i);var o=function(i){var o=k();e.vertexShader(o.vertex()).fragmentShader(o.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),r(e),e(i-1)};return o.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],o):r},o.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],o):t},o.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],o):a},O(o,e,"context"),J(o,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(o,"crossPreviousValueAttribute",e.buffers(),"attribute","aCrossPrevValue"),J(o,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),J(o,"mainPreviousValueAttribute",e.buffers(),"attribute","aMainPrevValue"),J(o,"baseValueAttribute",e.buffers(),"attribute","aBaseValue"),J(o,"basePreviousValueAttribute",e.buffers(),"attribute","aBasePrevValue"),J(o,"definedAttribute",e.buffers(),"attribute","aDefined"),J(o,"definedNextAttribute",e.buffers(),"attribute","aDefinedNext"),o},e.webglSeriesBar=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=function(){},i=j().size(2).type(q.BYTE).data([[-1,-1],[1,1],[-1,1],[1,-1]]);e.buffers().elementIndices(K([0,1,2,0,1,3])).attribute("aCorner",i);var o=function(i){var o=re();e.vertexShader(o.vertex()).fragmentShader(o.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),e.vertexShader().appendBody("\n            gl_Position.x += xModifier / uScreen.x * 2.0;\n        "),r(e),e(i)};return o.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],o):r},o.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],o):t},o.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],o):a},O(o,e,"context"),J(o,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(o,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),J(o,"baseValueAttribute",e.buffers(),"attribute","aBaseValue"),J(o,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),J(o,"definedAttribute",e.buffers(),"attribute","aDefined"),o},e.webglSeriesBoxPlot=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=function(){},i=te(),o=j().size(4).type(q.BYTE).data([[-1,-2,-1,1],[1,-2,-1,1],[1,-2,1,1],[-1,-2,1,1],[0,-2,-1,0],[0,-2,1,0],[0,-1,1,0],[0,-1,-1,0],[-1,-1,-1,1],[1,-1,-1,1],[1,-1,1,1],[-1,-1,1,1],[-1,0,-1,1],[1,0,-1,1],[1,0,1,1],[-1,0,1,1],[-1,1,-1,1],[1,1,-1,1],[1,1,1,1],[-1,1,1,1],[-1,-1,-1,0],[-1,-1,1,0],[-1,1,1,0],[-1,1,-1,0],[1,-1,-1,0],[1,-1,1,0],[1,1,1,0],[1,1,-1,0],[0,2,-1,0],[0,2,1,0],[0,1,1,0],[0,1,-1,0],[-1,2,-1,1],[1,2,-1,1],[1,2,1,1],[-1,2,1,1]]);e.buffers().elementIndices(K([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23,24,25,26,24,26,27,28,29,30,28,30,31,32,33,34,32,34,35])).attribute("aCorner",o);var l=function(o){var n=ne();e.vertexShader(n.vertex()).fragmentShader(n.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),i(e),e.vertexShader().appendBody("\n            gl_Position.x += xModifier / uScreen.x * 2.0;\n            gl_Position.y += yModifier / uScreen.y * 2.0;\n        "),r(e),e(o)};return l.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],l):r},l.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},O(l,e,"context"),O(l,i,"lineWidth"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"highValueAttribute",e.buffers(),"attribute","aHighValue"),J(l,"upperQuartileValueAttribute",e.buffers(),"attribute","aUpperQuartileValue"),J(l,"medianValueAttribute",e.buffers(),"attribute","aMedianValue"),J(l,"lowerQuartileValueAttribute",e.buffers(),"attribute","aLowerQuartileValue"),J(l,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),J(l,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),J(l,"capAttribute",e.buffers(),"attribute","aCapWidth"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglSeriesCandlestick=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=te(),i=function(){},o=j().size(3).type(q.BYTE).data([[0,2,1],[0,2,-1],[0,-2,-1],[0,-2,1],[1,-1,0],[-1,-1,0],[-1,1,0],[1,1,0]]);e.buffers().elementIndices(K([0,1,2,0,3,2,4,5,6,4,7,6])).attribute("aCorner",o);var l=function(o){var n=oe();e.vertexShader(n.vertex()).fragmentShader(n.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),r(e),e.vertexShader().appendBody("\n          gl_Position.x += xModifier / uScreen.x;\n          gl_Position.y += yModifier / uScreen.y;\n        "),i(e),e(o)};return l.decorate=function(){return arguments.length?(i=0>=arguments.length?void 0:arguments[0],l):i},l.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},O(l,e,"context"),O(l,r,"lineWidth"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"openValueAttribute",e.buffers(),"attribute","aOpenValue"),J(l,"highValueAttribute",e.buffers(),"attribute","aHighValue"),J(l,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),J(l,"closeValueAttribute",e.buffers(),"attribute","aCloseValue"),J(l,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglSeriesErrorBar=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=function(){},i=te(),o=j().size(3).type(q.BYTE).data([[0,1,1],[0,1,-1],[0,-1,-1],[0,-1,1],[1,-1,1],[1,-1,-1],[-1,-1,-1],[-1,-1,1],[-1,1,-1],[-1,1,1],[1,1,1],[1,1,-1]]);e.buffers().elementIndices(K([0,1,2,0,3,2,4,5,6,4,7,6,8,9,10,8,11,10])).attribute("aCorner",o);var l=function(o){var n=ie();e.vertexShader(n.vertex()).fragmentShader(n.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),i(e),e.vertexShader().appendBody("\n                gl_Position.x += xModifier / uScreen.x * 2.0;\n                gl_Position.y += yModifier / uScreen.y * 2.0;\n            "),r(e),e(o)};return l.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],l):r},l.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},O(l,e,"context"),O(l,i,"lineWidth"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"highValueAttribute",e.buffers(),"attribute","aHighValue"),J(l,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),J(l,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglSeriesLine=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=function(){},i=te(),o=j().size(3).type(q.BYTE).data([[-1,0,0],[1,1,0],[1,-1,1],[-1,0,1],[1,1,1]]);e.buffers().elementIndices(K([0,1,2,1,2,3,0,2,3,2,3,4])).attribute("aCorner",o);var l=function(o){var n=ee();e.vertexShader(n.vertex()).fragmentShader(n.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),t(e,"next",0),a(e,"next",1),t(e,"prev",0),a(e,"prev",1),t(e,"prevPrev",0),a(e,"prevPrev",1),e.vertexShader().appendBody(P.body),i(e),r(e),e(o-1)};return l.decorate=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],l):r},l.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},O(l,e,"context"),O(l,i,"lineWidth"),J(l,"crossPreviousValueAttribute",e.buffers(),"attribute","aCrossPrevValue"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"crossNextValueAttribute",e.buffers(),"attribute","aCrossNextValue"),J(l,"crossPreviousPreviousValueAttribute",e.buffers(),"attribute","aCrossPrevPrevValue"),J(l,"mainPreviousValueAttribute",e.buffers(),"attribute","aMainPrevValue"),J(l,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),J(l,"mainNextValueAttribute",e.buffers(),"attribute","aMainNextValue"),J(l,"mainPreviousPreviousValueAttribute",e.buffers(),"attribute","aMainPrevPrevValue"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),J(l,"definedNextAttribute",e.buffers(),"attribute","aDefinedNext"),l},e.webglSeriesOhlc=function(){var e=f().mode(u.TRIANGLES),t=n(),a=n(),r=te(),i=function(){},o=j().size(3).type(q.BYTE).data([[0,-2,-1],[0,-2,1],[0,2,1],[0,2,-1],[-1,-1,-1],[-1,-1,1],[0,-1,1],[0,-1,-1],[1,1,1],[0,1,1],[0,1,-1],[1,1,-1]]);e.buffers().elementIndices(K([0,1,2,0,3,2,4,5,6,4,7,6,8,9,10,10,11,8])).attribute("aCorner",o);var l=function(o){var n=ae();e.vertexShader(n.vertex()).fragmentShader(n.fragment()),t(e,"gl_Position",0),a(e,"gl_Position",1),r(e),e.vertexShader().appendBody("\n          gl_Position.x += xModifier / uScreen.x;\n          gl_Position.y += yModifier / uScreen.y;\n        "),i(e),e(o)};return l.decorate=function(){return arguments.length?(i=0>=arguments.length?void 0:arguments[0],l):i},l.xScale=function(){return arguments.length?(t=0>=arguments.length?void 0:arguments[0],l):t},l.yScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},O(l,e,"context"),O(l,r,"lineWidth"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"openValueAttribute",e.buffers(),"attribute","aOpenValue"),J(l,"highValueAttribute",e.buffers(),"attribute","aHighValue"),J(l,"lowValueAttribute",e.buffers(),"attribute","aLowValue"),J(l,"closeValueAttribute",e.buffers(),"attribute","aCloseValue"),J(l,"bandwidthAttribute",e.buffers(),"attribute","aBandwidth"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglSeriesPoint=function(){var e=f().mode(u.POINTS),t=j().data([0]);e.buffers().attribute("aIgnored",t).elementIndices(K([0]));var a=n(),r=n(),i=$(),o=function(){},l=function(t){e.vertexShader(i.vertex().appendHeader("attribute float aIgnored;").appendBody("gl_Position += aIgnored;")).fragmentShader(i.fragment()),a(e,"gl_Position",0),r(e,"gl_Position",1),o(e),e(t)};return l.type=function(){return arguments.length?(i=0>=arguments.length?void 0:arguments[0],l):i},l.decorate=function(){return arguments.length?(o=0>=arguments.length?void 0:arguments[0],l):o},l.xScale=function(){return arguments.length?(a=0>=arguments.length?void 0:arguments[0],l):a},l.yScale=function(){return arguments.length?(r=0>=arguments.length?void 0:arguments[0],l):r},O(l,e,"context"),J(l,"crossValueAttribute",e.buffers(),"attribute","aCrossValue"),J(l,"mainValueAttribute",e.buffers(),"attribute","aMainValue"),J(l,"sizeAttribute",e.buffers(),"attribute","aSize"),J(l,"definedAttribute",e.buffers(),"attribute","aDefined"),l},e.webglShaderBuilder=s,e.webglStrokeColor=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:[0,0,0,1],t=le().size(4),a=e,r=!0,i=function(e){if(e.vertexShader().appendHeaderIfNotExists(v.header).appendBodyIfNotExists(v.body),e.fragmentShader().appendHeaderIfNotExists(H.header).appendBodyIfNotExists(H.body),!!r){if(Array.isArray(a))e.buffers().attribute("aStrokeColor",he(a).size(4));else if("function"==typeof a)t.value(a),e.buffers().attribute("aStrokeColor",t);else throw new Error("Expected value to be an array or function, received ".concat(a));r=!1}};return i.value=function(){return arguments.length?(a!==(0>=arguments.length?void 0:arguments[0])&&(a=0>=arguments.length?void 0:arguments[0],r=!0),i):a},O(i,t,"data"),i},e.webglSymbolMapper=ve,e.webglTypes=q,e.webglUniform=d,e.webglVertexAttribute=j,Object.defineProperty(e,"__esModule",{value:!0})});
